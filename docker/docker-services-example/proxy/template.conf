server {
    listen	443 ssl;

    ssl_certificate     /etc/openssl/proxy/proxy.crt;
    ssl_certificate_key /etc/openssl/proxy/proxy.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    # location /wg-easy {
	# 	auth_basic "kks";
	# 	auth_basic_user_file /etc/nginx/.htpasswd;

    #     proxy_pass http://wg-easy/;

	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection 'upgrade';
	# 	proxy_set_header Accept-Encoding '';
	# 	proxy_set_header Referer $http_referer;
	# 	proxy_set_header Host $host;
	# 	proxy_set_header Cookie $http_cookie;
	# 	proxy_set_header X-Real-IP $remote_addr:$remote_port;
	# 	proxy_set_header X-Forwarded-Host $host;
	# 	proxy_set_header X-Forwarded-Server $host;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# 	proxy_set_header X-Forwarded-Port $port;
    
    # }

    location /kanboard/ {

        proxy_pass http://kanboard/;
        
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Accept-Encoding '';
		proxy_set_header Referer $http_referer;
		proxy_set_header Host $host;
		proxy_set_header Cookie $http_cookie;
		proxy_set_header X-Real-IP $remote_addr:$remote_port;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
    }

	location / {
		return 301 /kanboard/;
	}
}